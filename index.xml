<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hobocat home</title>
    <link>https://hobocat.github.io/</link>
    <description>Recent content on hobocat home</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 15 May 2024 15:24:47 +0800</lastBuildDate>
    <atom:link href="https://hobocat.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>归档</title>
      <link>https://hobocat.github.io/archive/</link>
      <pubDate>Wed, 15 May 2024 14:51:02 +0800</pubDate>
      <guid>https://hobocat.github.io/archive/</guid>
      <description></description>
    </item>
    <item>
      <title>MySQL DBA视角</title>
      <link>https://hobocat.github.io/post/database/2023-01-10-mysql_dba_%E8%A7%86%E8%A7%92/</link>
      <pubDate>Tue, 10 Jan 2023 19:39:31 +0000</pubDate>
      <guid>https://hobocat.github.io/post/database/2023-01-10-mysql_dba_%E8%A7%86%E8%A7%92/</guid>
      <description>1、MySQL部署前准备 关闭NUMA NUMA（Non-Uniform Memory Access，非一致性内存访问）服务器的基本特征是 Linux 将系统的硬件资源划分为多个软件抽象，称</description>
    </item>
    <item>
      <title>redis底层数据结构</title>
      <link>https://hobocat.github.io/post/nosql/2022-09-05-redisstruct/</link>
      <pubDate>Mon, 05 Sep 2022 16:02:30 +0000</pubDate>
      <guid>https://hobocat.github.io/post/nosql/2022-09-05-redisstruct/</guid>
      <description>一、前置知识&amp;amp;总览 对象结构全貌 Redis的每种对象其实都由对象结构(redisObject) 与 对应编码的数据结构组合而成，每种对象类型对应若干种编码方式</description>
    </item>
    <item>
      <title>Netty的基本使用</title>
      <link>https://hobocat.github.io/post/network/2022-03-09-netty/</link>
      <pubDate>Wed, 09 Mar 2022 10:50:33 +0000</pubDate>
      <guid>https://hobocat.github.io/post/network/2022-03-09-netty/</guid>
      <description>一、NIO基础 BIO Blocking IO： 同步阻塞的编程方式。 JDK1.4版本提供了BIO编程方式。编程实现过程为：首先在服务端启动一个ServerSocket来监听网络请求，客</description>
    </item>
    <item>
      <title>MapStruct的使用</title>
      <link>https://hobocat.github.io/post/tool/2022-02-27-mapstruct/</link>
      <pubDate>Sun, 27 Feb 2022 18:16:37 +0000</pubDate>
      <guid>https://hobocat.github.io/post/tool/2022-02-27-mapstruct/</guid>
      <description>一、简介 ​ 在一个成熟的工程中，尤其是现在的分布式系统中，应用与应用之间，还有单独的应用细分模块之后，对象需要经过转换包装才能对外提供服务（比如使用VO返回与HT</description>
    </item>
    <item>
      <title>分布式锁</title>
      <link>https://hobocat.github.io/post/tool/2022-02-15-distributed-lock/</link>
      <pubDate>Tue, 15 Feb 2022 19:37:37 +0000</pubDate>
      <guid>https://hobocat.github.io/post/tool/2022-02-15-distributed-lock/</guid>
      <description>一、分布式锁起因 分布式锁出现的原因 ​ 在传统单体应用单机部署的情况下，可以使用并发处相关的功能（如java并发处理相关的API：ReentrantLock或者sy</description>
    </item>
    <item>
      <title>Canal的使用</title>
      <link>https://hobocat.github.io/post/tool/2022-02-15-canal/</link>
      <pubDate>Tue, 15 Feb 2022 19:06:37 +0000</pubDate>
      <guid>https://hobocat.github.io/post/tool/2022-02-15-canal/</guid>
      <description>一、Canal简介 Canal是用Java开发的基于数据库增量日志解析，提供增量数据订阅&amp;amp;消费的中间件。Canal（Canal Deployer）主要支持了</description>
    </item>
    <item>
      <title>RocketMQ的使用</title>
      <link>https://hobocat.github.io/post/mq/2022-02-13-rocketmq/</link>
      <pubDate>Sun, 13 Feb 2022 10:45:12 +0000</pubDate>
      <guid>https://hobocat.github.io/post/mq/2022-02-13-rocketmq/</guid>
      <description>一、RocketMQ介绍 MQ作用 MQ是一种&amp;quot;&amp;ldquo;先进先出&amp;quot;的数据结构，主要包含以下三个作用 应用解耦 ​ 系统的耦合性越高，容错性就越低</description>
    </item>
    <item>
      <title>Prometheus&amp;Grafana的使用</title>
      <link>https://hobocat.github.io/post/tool/2022-01-29-prometheus-grafana/</link>
      <pubDate>Sat, 29 Jan 2022 16:06:27 +0000</pubDate>
      <guid>https://hobocat.github.io/post/tool/2022-01-29-prometheus-grafana/</guid>
      <description>一、Prometheus简介 Prometheus是一个开源监控和警报系统。Prometheus将其指标收集并存储在时序数据库中，用于灵活展示当前监控应用的状态。</description>
    </item>
    <item>
      <title>Guava的使用</title>
      <link>https://hobocat.github.io/post/tool/2021-02-07-guava/</link>
      <pubDate>Sun, 07 Feb 2021 17:06:37 +0000</pubDate>
      <guid>https://hobocat.github.io/post/tool/2021-02-07-guava/</guid>
      <description>一、介绍 ​ Guava工程包含了若干被Google的Java项目广泛依赖的核心库，例如：集合、缓存、原生类型支持、并发库、通用注解、字符串处理、I/O等等 二、工具</description>
    </item>
    <item>
      <title>spring cloud alibaba naocs使用详解</title>
      <link>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-alibaba-nacos/</link>
      <pubDate>Tue, 02 Feb 2021 16:42:30 +0000</pubDate>
      <guid>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-alibaba-nacos/</guid>
      <description>一、Naocs简介 ​ Nacos是阿里巴巴开源的一款支持服务注册与发现，配置管理以及微服务管理的组件。用来取代以前常用的注册中心（zookeeper , eureka</description>
    </item>
    <item>
      <title>spring cloud alibaba sentinel使用详解</title>
      <link>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-alibaba-sentinel/</link>
      <pubDate>Tue, 02 Feb 2021 16:42:30 +0000</pubDate>
      <guid>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-alibaba-sentinel/</guid>
      <description>一、Sentinel简介 ​ sentinel是面向分布式服务框架的轻量级流量控制框架,主要以流量为切入点,从流量控制,熔断降级,系统负载保护等多个维度来维护系统的</description>
    </item>
    <item>
      <title>spring cloud config使用详解</title>
      <link>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-config/</link>
      <pubDate>Tue, 02 Feb 2021 16:42:30 +0000</pubDate>
      <guid>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-config/</guid>
      <description>一、Spring Cloud Config简介 ​ Spring Cloud Config项目是一个解决分布式系统的配置管理方案。它包含了Client和Server两个部分，Server提供配置文件</description>
    </item>
    <item>
      <title>spring cloud eureka使用详解</title>
      <link>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-eureka/</link>
      <pubDate>Tue, 02 Feb 2021 16:42:30 +0000</pubDate>
      <guid>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-eureka/</guid>
      <description>一、简介 ​ Spring Cloud封装了Netflix公司开发的Eureka模块来实现服务注册和发现，Eureka采用了C-S的设计架构。Eureka Server 作为服务注册功能的服</description>
    </item>
    <item>
      <title>spring cloud gateway使用详解</title>
      <link>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-gateway/</link>
      <pubDate>Tue, 02 Feb 2021 16:42:30 +0000</pubDate>
      <guid>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-gateway/</guid>
      <description>一、Gateway概述 微服务网关简介 在微服务架构中，不同的微服务可以有不同的网络地址，各个微服务之间通过互相调用完成用户请求。这样会带来几个问题： 客户端多次请求</description>
    </item>
    <item>
      <title>spring cloud hystrix使用详解</title>
      <link>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-hystrix/</link>
      <pubDate>Tue, 02 Feb 2021 16:42:30 +0000</pubDate>
      <guid>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-hystrix/</guid>
      <description>一、Hystrix简介 ​ Hystrix是Netflix开源的一款容错框架，包含常用的容错方法：线程池隔离、信号量隔离、熔断、降级回退。在高并发访问下，系统所依赖</description>
    </item>
    <item>
      <title>spring cloud open feign使用详解</title>
      <link>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-open-feign/</link>
      <pubDate>Tue, 02 Feb 2021 16:42:30 +0000</pubDate>
      <guid>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-open-feign/</guid>
      <description>一、简介 ​ Open Feign为微服务架构下服务之间的调用提供了解决方案。首先利用了OpenFeign的声明式方式定义Web服务客户端，其次还更进一步通过集成Ribbo</description>
    </item>
    <item>
      <title>spring cloud ribbon使用详解</title>
      <link>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-ribbon/</link>
      <pubDate>Tue, 02 Feb 2021 16:42:30 +0000</pubDate>
      <guid>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-ribbon/</guid>
      <description>一、Ribbon概述 Ribbon简介 ​ Spring Cloud Ribbon 是基于Netflix Ribbon实现的一套客户端负载均衡的工具。主要功能是提供客户端的软件负载均衡算法和服务调用。R</description>
    </item>
    <item>
      <title>spring cloud sleuth使用详解</title>
      <link>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-sleuth/</link>
      <pubDate>Tue, 02 Feb 2021 16:42:30 +0000</pubDate>
      <guid>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-sleuth/</guid>
      <description>一、sleuth简介 ​ 微服务跟踪(sleuth)其实是一个工具,它在整个分布式系统中能跟踪一个用户请求的过程(包括数据采集，数据传输，数据存储，数据分析，数据可</description>
    </item>
    <item>
      <title>spring cloud zookeeper使用详解</title>
      <link>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-zookeeper/</link>
      <pubDate>Tue, 02 Feb 2021 16:42:30 +0000</pubDate>
      <guid>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-zookeeper/</guid>
      <description>一、简介 ​ Zookeeper作为知名的分布式调度系统，我们也可以利用其作为配置中心。其wacth 主动通知机制， 可以将node节点数据变更信息及时通知到clien</description>
    </item>
    <item>
      <title>微服务介绍</title>
      <link>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-preorder/</link>
      <pubDate>Tue, 02 Feb 2021 16:42:30 +0000</pubDate>
      <guid>https://hobocat.github.io/post/spring-cloud/2021-02-02-spring-cloud-preorder/</guid>
      <description>一、微服务概念 ​ 微服务架构风格是一种将单一应用程序开发成一组小型服务的方法，每个服务运行在自己的进程中，服务间通信采用轻量级通信机制【通常用HTTP资源API】</description>
    </item>
    <item>
      <title>seata实现分布式事务</title>
      <link>https://hobocat.github.io/post/database/2021-02-02-alibaba-seata/</link>
      <pubDate>Tue, 02 Feb 2021 16:34:31 +0000</pubDate>
      <guid>https://hobocat.github.io/post/database/2021-02-02-alibaba-seata/</guid>
      <description>一、Seata简介 ​ Seata 是一款开源的分布式事务解决方案，致力于提供高性能和简单易用的分布式事务服务。Seata 将为用户提供了 AT、TCC、SAGA 和 XA 事务模式。 在</description>
    </item>
    <item>
      <title>分布式事务理论</title>
      <link>https://hobocat.github.io/post/database/2021-02-02-%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Tue, 02 Feb 2021 16:34:31 +0000</pubDate>
      <guid>https://hobocat.github.io/post/database/2021-02-02-%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</guid>
      <description>一、分布式事务基础 事务 指的就是一个操作单元，在这个操作单元中的所有操作最终要保持一致的行为，要么所有操作都成功，要么所有的操作都被撤销。 事务的4个特性 原子性（A</description>
    </item>
    <item>
      <title>MongoDB使用详解</title>
      <link>https://hobocat.github.io/post/nosql/2021-01-29-mongodb/</link>
      <pubDate>Fri, 29 Jan 2021 10:18:31 +0000</pubDate>
      <guid>https://hobocat.github.io/post/nosql/2021-01-29-mongodb/</guid>
      <description>一、MongoDB简介&amp;amp;安装 简介 ​ MongoDB是NoSQL数据库中的文档型数据库，文档型数据库与关系型最为接近。它支持的数据结构非常松散，是类似jso</description>
    </item>
    <item>
      <title>kubernetes的使用</title>
      <link>https://hobocat.github.io/post/docker/2021-01-18-kubernetes%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 18 Jan 2021 15:37:27 +0000</pubDate>
      <guid>https://hobocat.github.io/post/docker/2021-01-18-kubernetes%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>一、kubernetes 概述 基本介绍 kubernetes简称K8s，是用8代替&amp;quot;ubernete&amp;quot;而成的缩写。是一个开源的用于管理云平台中多</description>
    </item>
    <item>
      <title>HBase使用</title>
      <link>https://hobocat.github.io/post/hbase/2020-10-29-hbase/</link>
      <pubDate>Thu, 29 Oct 2020 15:35:30 +0000</pubDate>
      <guid>https://hobocat.github.io/post/hbase/2020-10-29-hbase/</guid>
      <description>一、简介&amp;amp;安装 简介 HBase是一种分布式、可扩展、支持海量数据存储的NoSQL数据库。 逻辑上，HBase的数据模型同关系型数据库很类似，数据存储在一张表</description>
    </item>
    <item>
      <title>Kafka的使用</title>
      <link>https://hobocat.github.io/post/mq/2020-10-16-kafka/</link>
      <pubDate>Fri, 16 Oct 2020 10:45:12 +0000</pubDate>
      <guid>https://hobocat.github.io/post/mq/2020-10-16-kafka/</guid>
      <description>一、概述&amp;amp;安装 概述 Kafka是一个大数据流处理平台 Kafka是一个分布式的基于发布/订阅模式的消息队列(Message Queue)，主要应用于大数据实时</description>
    </item>
    <item>
      <title>hive使用</title>
      <link>https://hobocat.github.io/post/hive/2020-09-25-hive/</link>
      <pubDate>Fri, 25 Sep 2020 15:31:20 +0000</pubDate>
      <guid>https://hobocat.github.io/post/hive/2020-09-25-hive/</guid>
      <description>一、Hive的概念 Hive由Facebook开源基于Hadoop的一个数据仓库工具，用于解决海量结构化日志的数据统计，Hive可以将结构化的数据文件映射为一张表</description>
    </item>
    <item>
      <title>Hadoop基础</title>
      <link>https://hobocat.github.io/post/hadoop/2020-09-24-hadoop/</link>
      <pubDate>Thu, 24 Sep 2020 14:23:30 +0000</pubDate>
      <guid>https://hobocat.github.io/post/hadoop/2020-09-24-hadoop/</guid>
      <description>一、Hadoop和大数据简介 大数据 ​ 大数据(BigData) :指无法在一定时间范围内用常规软件工具进行捕捉、管理和处理的数据集合，是需要新处理模式才能具有更强的</description>
    </item>
    <item>
      <title>mybatis plus使用指南</title>
      <link>https://hobocat.github.io/post/mybatis/2020-08-16-mybatis-plus/</link>
      <pubDate>Sun, 16 Aug 2020 20:48:02 +0000</pubDate>
      <guid>https://hobocat.github.io/post/mybatis/2020-08-16-mybatis-plus/</guid>
      <description>一、集成Spring boot 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.baomidou&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mybatis-plus-boot-starter&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;[version]&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- 用于生成逆向工程 --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.baomidou&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mybatis-plus-generator&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;[version]&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.freemarker&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;freemarker&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;[version]&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; 二、逆向工程配置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</description>
    </item>
    <item>
      <title>logstash的使用</title>
      <link>https://hobocat.github.io/post/searchengine/2020-08-09-logstash/</link>
      <pubDate>Sun, 09 Aug 2020 20:34:20 +0000</pubDate>
      <guid>https://hobocat.github.io/post/searchengine/2020-08-09-logstash/</guid>
      <description>一、Logstash架构简介 简介 logstash是一个数据收集处理引擎，可是视之为一个ETL工具。 架构 Input 用于从数据源获取数据，常见的插件如file， syslog</description>
    </item>
    <item>
      <title>beats的使用</title>
      <link>https://hobocat.github.io/post/searchengine/2020-08-09-beats/</link>
      <pubDate>Sun, 09 Aug 2020 20:34:01 +0000</pubDate>
      <guid>https://hobocat.github.io/post/searchengine/2020-08-09-beats/</guid>
      <description>一、简介 一个轻量级的基于golang开发的数据传输者，用于收集数据常用的beat有下： Filebeat 日志文件 Metricbeat 收集操作系统和常用软件数据 Packetbeat 收集网络数据 Heartbeat 健康检查 数据扭转可能</description>
    </item>
    <item>
      <title>Java11新特性</title>
      <link>https://hobocat.github.io/post/java/2020-05-29-java11/</link>
      <pubDate>Fri, 29 May 2020 11:51:31 +0000</pubDate>
      <guid>https://hobocat.github.io/post/java/2020-05-29-java11/</guid>
      <description>一、var“关键字” 1 2 3 4 5 // 编译器能根据右边的表达式自动推断类型 // var的好处是在使用lambda表达式时给参数加上注解 var str = &amp;#34;abc&amp;#34;; System.out.println(str.getClass()); //class java.lang.String Consumer&amp;lt;Integer&amp;gt; consumer = (@Deprecated var x) -&amp;gt; System.out.println(x); var</description>
    </item>
    <item>
      <title>Java9新特性</title>
      <link>https://hobocat.github.io/post/java/2020-05-28-java9/</link>
      <pubDate>Thu, 28 May 2020 15:45:32 +0000</pubDate>
      <guid>https://hobocat.github.io/post/java/2020-05-28-java9/</guid>
      <description>一、JDK目录结构 目录名称 说明 bin 包含所有命令和运行时动态链接库 conf 包含用户可编辑的配置文件，例如以前位于jre\lib目录中的.properties和.polic</description>
    </item>
    <item>
      <title>Java多线程并发编程</title>
      <link>https://hobocat.github.io/post/java/2020-01-01-concurrent/</link>
      <pubDate>Wed, 01 Jan 2020 22:34:31 +0000</pubDate>
      <guid>https://hobocat.github.io/post/java/2020-01-01-concurrent/</guid>
      <description>一、线程的状态 从操作系统层面划分 从java代码的角度来进行划分 二、JDK创建线程的方式 继承Thread类 1 2 3 4 5 6 7 8 9 10 11 12 13 public class ThreadTest { public static void main(String[] args) { Thread thread = new ThreadDemo();</description>
    </item>
    <item>
      <title>JVM详解</title>
      <link>https://hobocat.github.io/post/java/2019-12-18-jvm/</link>
      <pubDate>Wed, 18 Dec 2019 10:32:32 +0000</pubDate>
      <guid>https://hobocat.github.io/post/java/2019-12-18-jvm/</guid>
      <description>一、JDK&amp;amp;JRE&amp;amp;JVM之间的关系 JDK包含JRE和JVM，JRE包含JVM javac用于编译java代码到字节码文件 使用java命令启动JV</description>
    </item>
    <item>
      <title>虚拟化概念</title>
      <link>https://hobocat.github.io/post/docker/2019-12-09-%E8%99%9A%E6%8B%9F%E5%8C%96%E7%9A%84%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Mon, 09 Dec 2019 15:43:37 +0000</pubDate>
      <guid>https://hobocat.github.io/post/docker/2019-12-09-%E8%99%9A%E6%8B%9F%E5%8C%96%E7%9A%84%E6%A6%82%E5%BF%B5/</guid>
      <description>一、虚拟化概念 ​ 虚拟化，是指通过虚拟化技术将一台计算机虚拟为多台逻辑计算机。在一台计算机上同时运行多个逻辑计算机，每个逻辑计算机可运行不同的操作系统，并且应用程</description>
    </item>
    <item>
      <title>Spring Boot高级篇</title>
      <link>https://hobocat.github.io/post/spring/2019-12-09-spring-boot-%E9%AB%98%E7%BA%A7%E7%AF%87/</link>
      <pubDate>Mon, 09 Dec 2019 15:37:10 +0000</pubDate>
      <guid>https://hobocat.github.io/post/spring/2019-12-09-spring-boot-%E9%AB%98%E7%BA%A7%E7%AF%87/</guid>
      <description>一、Spring Boot与缓存 JSR107中JCache简介 JCache定义了5个核心接口，分别是CachingProvider, CacheManager, Cache, Entry 和 Expiry CachingPro</description>
    </item>
    <item>
      <title>RabbitMQ的使用</title>
      <link>https://hobocat.github.io/post/mq/2019-11-28-rabbitmq/</link>
      <pubDate>Thu, 28 Nov 2019 11:08:22 +0000</pubDate>
      <guid>https://hobocat.github.io/post/mq/2019-11-28-rabbitmq/</guid>
      <description>一、主流消息中间件介绍 ActiveMQ ​ ActiveMQ是Apache出品的能力强劲的开源消息总线，并且它完全支持JMS规范的消息中间件。具有丰富的API、多种集群构建模式。</description>
    </item>
    <item>
      <title>PXC集群使用</title>
      <link>https://hobocat.github.io/post/database/2019-11-20-pxc/</link>
      <pubDate>Wed, 20 Nov 2019 16:34:31 +0000</pubDate>
      <guid>https://hobocat.github.io/post/database/2019-11-20-pxc/</guid>
      <description>一、Percona概览 Percona Server简介 Percona Server由领先的MySQL咨询公司Percona发布。Percona Server是一款独立的数据库产品，其可以完全</description>
    </item>
    <item>
      <title>MyCat的使用</title>
      <link>https://hobocat.github.io/post/database/2019-11-12-mycat/</link>
      <pubDate>Tue, 12 Nov 2019 12:36:22 +0000</pubDate>
      <guid>https://hobocat.github.io/post/database/2019-11-12-mycat/</guid>
      <description>一、MyCat概览 MyCat简介 ​ 支持对MySQL等数据库进行垂直切分，水平切分并实现了读写分离和负载均衡的数据库中间件 MyCat的基本元素 逻辑库 对于应用来说相</description>
    </item>
    <item>
      <title>MySQL数据库性能及其架构优化</title>
      <link>https://hobocat.github.io/post/database/2019-11-06-mysql/</link>
      <pubDate>Wed, 06 Nov 2019 17:44:33 +0000</pubDate>
      <guid>https://hobocat.github.io/post/database/2019-11-06-mysql/</guid>
      <description>一、安装MySQL Yum源下载方式 预备工作 1 yum -y install yum-utils #安装yum-utils 第一步：下载yum源 在官网选择Downloads&amp;ndash;&amp;raquo;Comm</description>
    </item>
    <item>
      <title>OAuth2介绍</title>
      <link>https://hobocat.github.io/post/application/2019-10-09-oauth2/</link>
      <pubDate>Wed, 09 Oct 2019 10:16:33 +0000</pubDate>
      <guid>https://hobocat.github.io/post/application/2019-10-09-oauth2/</guid>
      <description>一、OAuth2的概念 ​ OAuth（开放授权）是一个开放标准，允许用户授权第三方移动应用访问他们存储在另外的服务提供者上的信息，而不需要将用户名和密码提供给第三</description>
    </item>
    <item>
      <title>Spring Security使用指南</title>
      <link>https://hobocat.github.io/post/spring/2019-10-09-spring-security/</link>
      <pubDate>Wed, 09 Oct 2019 10:06:30 +0000</pubDate>
      <guid>https://hobocat.github.io/post/spring/2019-10-09-spring-security/</guid>
      <description>一、基于游览器的安全 表单登陆 设置表单登陆【继承WebSecurityConfigurerAdapter进行适配】 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description>
    </item>
    <item>
      <title>单点登陆</title>
      <link>https://hobocat.github.io/post/application/2019-06-12-single-sign-on/</link>
      <pubDate>Wed, 12 Jun 2019 16:58:33 +0000</pubDate>
      <guid>https://hobocat.github.io/post/application/2019-06-12-single-sign-on/</guid>
      <description>一、简介 单点登陆：在多系统中单一位置登录可以实现多系统同时登录的一种技术。常在互联网应用和企业级平台中使用。 第三方登陆：在某系统中使用其他系统的用户实现本系统登</description>
    </item>
    <item>
      <title>nginx服务</title>
      <link>https://hobocat.github.io/post/nginx/2019-06-04-nginx/</link>
      <pubDate>Tue, 04 Jun 2019 20:06:07 +0000</pubDate>
      <guid>https://hobocat.github.io/post/nginx/2019-06-04-nginx/</guid>
      <description>一、Nginx概述 简介 ​ Nginx是一个开源且高效、可靠的HTTP中间件、代理服务。 nginx优势： IO多路复用的epoll 轻量级【功能模块少、代码模块化】 CP</description>
    </item>
    <item>
      <title>elasticsearch技术</title>
      <link>https://hobocat.github.io/post/searchengine/2019-05-22-elasticsearch/</link>
      <pubDate>Wed, 22 May 2019 14:43:02 +0000</pubDate>
      <guid>https://hobocat.github.io/post/searchengine/2019-05-22-elasticsearch/</guid>
      <description>一、ElasticSearch概念 ​ ElasticSearch是一个基于Lucene的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful</description>
    </item>
    <item>
      <title>Java设计模式</title>
      <link>https://hobocat.github.io/post/java/2019-04-25-design/</link>
      <pubDate>Thu, 25 Apr 2019 17:05:12 +0000</pubDate>
      <guid>https://hobocat.github.io/post/java/2019-04-25-design/</guid>
      <description>一、软件设计七大原则 开闭原则 定义：一个软件实体如类、模块、函数应该对扩展开放，对修改关闭 强调：用抽象构建框架，用实现扩展细节 优点：提高软件系统的可复用性及可维护</description>
    </item>
    <item>
      <title>Redis使用详解</title>
      <link>https://hobocat.github.io/post/nosql/2019-03-21-redis/</link>
      <pubDate>Thu, 21 Mar 2019 14:36:30 +0000</pubDate>
      <guid>https://hobocat.github.io/post/nosql/2019-03-21-redis/</guid>
      <description>一、NoSQL简介 NoSQL分类 键值（Key-Value）存储数据库：这一类数据库主要会使用到一个hash表，如Redis、Oracle BDB 列存储数据库：通常是用</description>
    </item>
    <item>
      <title>dubbo应用开发</title>
      <link>https://hobocat.github.io/post/dubbo/2019-03-01-dubbo/</link>
      <pubDate>Fri, 01 Mar 2019 09:34:33 +0000</pubDate>
      <guid>https://hobocat.github.io/post/dubbo/2019-03-01-dubbo/</guid>
      <description>一、基础知识 分布式系统 ​ 分布式系统是若干独立计算机的集合，这些计算机对于用户来说就像单个相关系统。 架构发展演变 单一应用架构 一个war包将所有功能都部署在一起搞定</description>
    </item>
    <item>
      <title>Spring Boot基础篇</title>
      <link>https://hobocat.github.io/post/spring/2019-01-30-spring-boot-%E5%9F%BA%E7%A1%80%E7%AF%87/</link>
      <pubDate>Wed, 30 Jan 2019 11:11:10 +0000</pubDate>
      <guid>https://hobocat.github.io/post/spring/2019-01-30-spring-boot-%E5%9F%BA%E7%A1%80%E7%AF%87/</guid>
      <description>一、Spring Boot简单入门 Spring Boot简介 ​ 因为J2EE笨重的开发方式、繁琐的配置、低下的开发效率和复杂的部署流程、集成第三方插件难度大这些技术痛点的存在的</description>
    </item>
    <item>
      <title>docker基础篇</title>
      <link>https://hobocat.github.io/post/docker/2018-12-20-docker-%E5%9F%BA%E7%A1%80%E7%AF%87/</link>
      <pubDate>Thu, 20 Dec 2018 14:23:37 +0000</pubDate>
      <guid>https://hobocat.github.io/post/docker/2018-12-20-docker-%E5%9F%BA%E7%A1%80%E7%AF%87/</guid>
      <description>一、简介 ​ Docker是PASS【Platform As A Service】提供商dotCloud开源的一个基于LXC【Linux Container】的高级容器引擎，</description>
    </item>
    <item>
      <title>spring-data-solr的应用</title>
      <link>https://hobocat.github.io/post/spring/2018-12-06-spring-data-solr/</link>
      <pubDate>Thu, 06 Dec 2018 16:07:31 +0000</pubDate>
      <guid>https://hobocat.github.io/post/spring/2018-12-06-spring-data-solr/</guid>
      <description>一、集成spring-data-solr 1 2 3 4 5 6 7 8 9 10 11 &amp;lt;!-- 单机连接 --&amp;gt; &amp;lt;solr:solr-client id=&amp;#34;solrClient&amp;#34; url=&amp;#34;http://192.168.1.155:8080/solr&amp;#34; /&amp;gt; &amp;lt;!-- 使用SolrJ的转换器，Spring的转换器对于关联类型不友好 --&amp;gt; &amp;lt;bean id=&amp;#34;solrConverter&amp;#34; class=&amp;#34;org.springframework.data.solr.core.convert.SolrJConverter&amp;#34; /&amp;gt; &amp;lt;!-- 配</description>
    </item>
    <item>
      <title>solr的应用</title>
      <link>https://hobocat.github.io/post/searchengine/2018-12-04-solr/</link>
      <pubDate>Tue, 04 Dec 2018 14:30:00 +0000</pubDate>
      <guid>https://hobocat.github.io/post/searchengine/2018-12-04-solr/</guid>
      <description>一、Solr安装包主要目录布局 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 solr | +- bin | | | +- init.d【linux中制作solr服务的配置文件】 |</description>
    </item>
    <item>
      <title>lucene基本应用</title>
      <link>https://hobocat.github.io/post/searchengine/2018-10-29-lucene/</link>
      <pubDate>Mon, 29 Oct 2018 10:42:34 +0000</pubDate>
      <guid>https://hobocat.github.io/post/searchengine/2018-10-29-lucene/</guid>
      <description>一、术语&amp;amp;基础知识术语 结构化数据 结构化数据：指具有固定格式或有限长度的数据，如数据库等 非结构化数据：指不定长或无固定格式的数据，如HTML等 数据查询方法</description>
    </item>
    <item>
      <title>Java8新特性</title>
      <link>https://hobocat.github.io/post/java/2018-10-17-java8/</link>
      <pubDate>Wed, 17 Oct 2018 11:15:32 +0000</pubDate>
      <guid>https://hobocat.github.io/post/java/2018-10-17-java8/</guid>
      <description>一、Map结构优化 ​ java8之前HashMap存储结构如下图，将Map中的key进行哈希运算得到hashCode，当出现hashCode相同但equals不同</description>
    </item>
    <item>
      <title>spring注解驱动及其源码分析</title>
      <link>https://hobocat.github.io/post/spring/2018-10-08-spring-annotation/</link>
      <pubDate>Mon, 08 Oct 2018 15:25:32 +0000</pubDate>
      <guid>https://hobocat.github.io/post/spring/2018-10-08-spring-annotation/</guid>
      <description>一、组件注册 ​ Spring注解驱动上下文环境类为AnnotationConfigApplicationContext，避免使用application.xml进行</description>
    </item>
    <item>
      <title>通用mapper使用指南</title>
      <link>https://hobocat.github.io/post/mybatis/2018-10-08-mapper/</link>
      <pubDate>Mon, 08 Oct 2018 15:12:22 +0000</pubDate>
      <guid>https://hobocat.github.io/post/mybatis/2018-10-08-mapper/</guid>
      <description>一、概述 ​ 通用 Mapper是一个可以实现任意 MyBatis 通用方法的框架，项目提供了常规的增删改查操作以及查询相关的单表操作。通用 Mapper 是为了解决 MyBatis 使用中 90% 的基本操作，使用它可</description>
    </item>
    <item>
      <title>mybatis使用指南</title>
      <link>https://hobocat.github.io/post/mybatis/2018-09-27-mybatis/</link>
      <pubDate>Thu, 27 Sep 2018 15:45:32 +0000</pubDate>
      <guid>https://hobocat.github.io/post/mybatis/2018-09-27-mybatis/</guid>
      <description>一、简介 ​ MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可</description>
    </item>
    <item>
      <title>Git使用指南</title>
      <link>https://hobocat.github.io/post/tool/2018-09-20-git/</link>
      <pubDate>Thu, 20 Sep 2018 10:50:33 +0000</pubDate>
      <guid>https://hobocat.github.io/post/tool/2018-09-20-git/</guid>
      <description>一、版本控制工具应具备的功能 协调修改 多人并行不悖的修改服务器端的同一个文件 数据备份 不仅保持目录和文件的当前状态，还能够保持每个提交过的历史状态 版本管理 在保存每一</description>
    </item>
    <item>
      <title>thymeleaf与Spring整合</title>
      <link>https://hobocat.github.io/post/thymeleaf/2018-09-06-thymeleaf-spring/</link>
      <pubDate>Thu, 06 Sep 2018 15:37:40 +0000</pubDate>
      <guid>https://hobocat.github.io/post/thymeleaf/2018-09-06-thymeleaf-spring/</guid>
      <description>前言 Thymeleaf集成了Spring Framework的3.x和4.x版本，由两个名为thymeleaf-spring3和thymeleaf-spring4</description>
    </item>
    <item>
      <title>thymeleaf的基本使用</title>
      <link>https://hobocat.github.io/post/thymeleaf/2018-08-29-thymeleaf/</link>
      <pubDate>Wed, 29 Aug 2018 13:03:42 +0000</pubDate>
      <guid>https://hobocat.github.io/post/thymeleaf/2018-08-29-thymeleaf/</guid>
      <description>一、简介 Thymeleaf是一个适用于Web和独立环境的现代服务器端Java模板引擎，能够处理HTML，XML，JavaScript，CSS甚至纯文本。 Thym</description>
    </item>
    <item>
      <title>🌞 导航</title>
      <link>https://hobocat.github.io/nav/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hobocat.github.io/nav/</guid>
      <description>🌞 分类 ONE link1 link2 link3 link4 link5 link6 link7 link8 link9 🔨 分类 TWO link1 link2 link3 link4 link5 link6 link7 link8 link9 🍺 分类 THREE link1 link2 link3 link4 link5 link6 link7 link8 link9 🔖 标签 BOOKMARKs bookmark item one https://bookmark-item-one.com bookmark item two https://bookmark-item-two.com bookmark item three https://bookmark-item-three.com</description>
    </item>
  </channel>
</rss>
